image: docker:latest

services:
  - docker:dind

stages:
  - build
  - test
  - release
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-test
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

before_script:
#  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - apk add --update --no-cache bash nodejs
  - export BUILD_DATE=$(date +"%Y.%m.%d %H:%M:%S")
  - wget -q https://gitlab.com/Shinobi-Systems/Shinobi/raw/master/package.json -O ./package.json
  - export APP_VERSION=$( node -pe "require('./package.json')['version']" )

build-microservice-development-alpine:
  stage: build
  script:
#    - apk add --update --no-cache bash
#    - /bin/bash ./gitlab/buildImage.sh "dev-microservice" "git" "" "false" "" "" "alpine"
#    - /bin/bash ./gitlab/buildImage.sh "dev-microservice" "git" "" "false" "" "-debian" "debian"
#    - docker build --pull -f ./alpine/Dockerfile -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-alpine" .
#    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-alpine"
#    - docker build --pull -f ./debian/Dockerfile -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-debian" .
#    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-debian"
    - docker build --pull -f ./alpine/Dockerfile -t $CONTAINER_TEST_IMAGE-alpine --build-arg ARG_APP_VERSION=$APP_VERSION --build-arg ARG_APP_CHANNEL=$CI_COMMIT_REF_SLUG --build-arg ARG_APP_COMMIT=$CI_COMMIT_SHA --build-arg ARG_BUILD_DATE="$BUILD_DATE" --build-arg ARG_FLAVOR="alpine" .
    - docker push $CONTAINER_TEST_IMAGE-alpine
#  except:
#    - master
  only:
    - dev-microservice
    - /^issue-.*$/

#test-microservice-development-alpine:
#  stage: test
#  script:
##    - docker pull $CONTAINER_TEST_IMAGE-alpine
##    - docker run $CONTAINER_TEST_IMAGE-alpine /script/to/run/tests
##    - echo "Testing dev-microservice-alpine ..."

release-microservice-development-alpine:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE-alpine
    - docker tag $CONTAINER_TEST_IMAGE-alpine $CONTAINER_RELEASE_IMAGE-alpine
    - docker push $CONTAINER_RELEASE_IMAGE-alpine
  only:
    - dev-microservice
    - /^issue-.*$/

build-microservice-development-debian:
  stage: build
  script:
#    - apk add --update --no-cache bash
#    - /bin/bash ./gitlab/buildImage.sh "dev-microservice" "git" "" "false" "" "" "alpine"
#    - /bin/bash ./gitlab/buildImage.sh "dev-microservice" "git" "" "false" "" "-debian" "debian"
#    - docker build --pull -f ./alpine/Dockerfile -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-alpine" .
#    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-alpine"
#    - docker build --pull -f ./debian/Dockerfile -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-debian" .
#    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-debian"
    - docker build --pull -f ./debian/Dockerfile -t $CONTAINER_TEST_IMAGE-debian --build-arg ARG_APP_VERSION=$APP_VERSION --build-arg ARG_APP_CHANNEL=$CI_COMMIT_REF_SLUG --build-arg ARG_APP_COMMIT=$CI_COMMIT_SHA --build-arg ARG_BUILD_DATE="$BUILD_DATE" --build-arg ARG_FLAVOR="debian" .
    - docker push $CONTAINER_TEST_IMAGE-debian
#  except:
#    - master
  only:
    - dev-microservice
    - /^issue-.*$/

#test-microservice-development-debian:
#  stage: test
#  script:
##    - docker pull $CONTAINER_TEST_IMAGE-debian
##    - docker run $CONTAINER_TEST_IMAGE-debian /script/to/run/tests
##    - echo "Testing dev-microservice-debian ..."

release-microservice-development-alpine:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE-debian
    - docker tag $CONTAINER_TEST_IMAGE-debian $CONTAINER_RELEASE_IMAGE-debian
    - docker push $CONTAINER_RELEASE_IMAGE-debian
  only:
    - dev-microservice
    - /^issue-.*$/

build-microservice:
  stage: build
  script:
    - apk add --update --no-cache bash
    - /bin/bash ./gitlab/buildImageDockerHub.sh "microservice" "git" "" "false" "" "" "alpine"
    - /bin/bash ./gitlab/buildImageDockerHub.sh "microservice" "git" "" "false" "" "-debian" "debian"
#    - docker build --pull -t "$DH_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
#    - docker push "$DH_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
#  except:
#    - master
  only:
    - microservice

#build-issues:
#  stage: build
#  script:
#    - docker build --pull -f ./alpine/Dockerfile -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-alpine" .
##    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-alpine"
#    - docker build --pull -f ./debian/Dockerfile -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-debian" .
##    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-debian"
#  except:
#    - master
#    - microservice
#    - dev-microservice
#  only:
#    - /^issue-.*$/
